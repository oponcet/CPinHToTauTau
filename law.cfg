[core]

# inherit from the columnflow configuration file
inherit: $CF_BASE/law.cfg


[modules]

columnflow.tasks.cms.inference
columnflow.tasks.cms.external
httcp.tasks


[logging]

law: INFO
luigi-interface: INFO
gfal2: WARNING
columnflow.columnar_util-perf: INFO


#[job]

#job_file_dir: $CF_JOB_BASE
#job_file_dir_cleanup: False
#job_file_dir_mkdtemp: sub_{{task_id}}_XXX


# Analysis specific

[analysis]

default_analysis: httcp.config.analysis_httcp.analysis_httcp
default_config: run3_2022_preEE_nano_cp_tau_v14_limited
default_dataset: data_tau_C

calibration_modules: columnflow.calibration.cms.{jets,met}, httcp.calibration.main
selection_modules: columnflow.selection.{empty}, columnflow.selection.cms.{json_filter, met_filters}, httcp.selection.main
production_modules: columnflow.production.{categories,normalization,processes}, columnflow.production.cms.{btag,electron,mc_weight,muon,pdf,pileup,scale,seeds}, httcp.production.main
categorization_modules: httcp.categorization.main
weight_production_modules: columnflow.weight.{empty,all_weights}, httcp.weight.main
ml_modules: columnflow.ml, httcp.ml.example
inference_modules: columnflow.inference, httcp.inference.example

# namespace of all columnflow tasks
cf_task_namespace: cf

# default sandbox for main tasks with standard packages for columnar processing
default_columnar_sandbox: bash::$CF_BASE/sandboxes/venv_columnar.sh

# wether or not the ensure_proxy decorator should be skipped, even if used by task's run methods
skip_ensure_proxy: False

# some remote workflow parameter defaults
htcondor_flavor: $CF_HTCONDOR_FLAVOR
#htcondor_share_software: False
htcondor_share_software: True
slurm_flavor: $CF_SLURM_FLAVOR
slurm_partition: $CF_SLURM_PARTITION

# ChunkedIOHandler defaults
chunked_io_chunk_size: 100000
chunked_io_pool_size: 2
chunked_io_debug: False

# csv list of task families that inherit from ChunkedReaderMixin and whose output arrays should be
# checked (raising an exception) for non-finite values before saving them to disk
check_finite_output: cf.CalibrateEvents, cf.SelectEvents, cf.ProduceColumns, cf.UniteColumns

# csv list of task families that inherit from ChunkedReaderMixin and whose input columns should be
# checked (raising an exception) for overlaps between fields when created a merged input array
check_overlapping_inputs: None

# whether to log runtimes of array functions by default
log_array_function_runtime: False


[outputs]

# list of all used file systems
wlcg_file_systems: local, wlcg_fs, wlcg_fs_infn_redirector, wlcg_fs_global_redirector
#wlcg_file_systems: local, wlcg_fs, wlcg_fs_cernbox, wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# list of file systems used by columnflow.tasks.external.GetDatasetLFNs.iter_nano_files to
# look for the correct fs per nano input file (in that order)
lfn_sources: local, wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# output locations per task family
# for local targets : "local[, LOCAL_FS_NAME or STORE_PATH]"
# for remote targets: "wlcg[, WLCG_FS_NAME]"
# (when WLCG_FS_NAME is empty, the tasks' "default_wlcg_fs" attribute is used)
# examples:

cf.GetDatasetLFNs: wlcg
cf.CalibrateEvents: wlcg
cf.SelectEvents: wlcg
cf.MergeSelectionStats: wlcg
cf.MergeSelectionMasks: wlcg
cf.CreateCutflowHistograms: wlcg
cf.PlotCutflow: wlcg
cf.PlotCutflowVariables1D: wlcg
cf.ReduceEvents: wlcg
cf.MergeReductionStats: wlcg
cf.MergeReducedEvents: wlcg
cf.ProduceColumns: wlcg
cf.CreateHistograms: wlcg
cf.MergeHistograms: wlcg
cf.MergeShiftedHistograms: wlcg
cf.PlotVariables1D: wlcg
cf.PlotVariables2D: wlcg
cf.PlotShiftedVariables1D: wlcg
cf.CreateYieldTable: wlcg
cf.UniteColumns: wlcg
cf.DataDrivenEstimation: wlcg
cf.BundleBashSandbox: wlcg
cf.BundleExternalFiles: wlcg
cf.BundleRepo: wlcg
cf.BundleSoftware: wlcg
cf.BundleCMSSWSandbox: wlcg


[job]

job_file_dir: $CF_JOB_BASE
job_file_dir_cleanup: False

# storage element (SE) and output directory on that SE for crab's internal output
# (crab might not even move files there, but it is strictly required for crab's job submission)
crab_storage_element: $CF_CRAB_STORAGE_ELEMENT
crab_base_directory: $CF_CRAB_BASE_DIRECTORY

# lcg setup file sourced in remote jobs to access gfal tools
remote_lcg_setup: /cvmfs/grid.cern.ch/centos7-ui-200122/etc/profile.d/setup-c7-ui-python3-example.sh

[local]

base: root://eosuser.cern.ch

[local_fs]

base: /


[wlcg_fs]

# set this to your desired location
#base: root://eosuser.cern.ch/eos/user/$CF_CERN_USER_FIRSTCHAR/$CF_CERN_USER/$CF_STORE_NAME
base: root://eosuser.cern.ch/eos/user/o/oponcet2/analysis/CP_dev
create_file_dir: True
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 50GB

[wlcg_fs_cernbox]

xrootd_base: root://eosuser.cern.ch/eos/user/$CF_CERN_USER_FIRSTCHAR/$CF_CERN_USER/$CF_STORE_NAME
#xrootd_base: root://eosuser.cern.ch/eos/user/g/gsaha/$CF_STORE_NAME
base: &::xrootd_base

[wlcg_fs_infn_redirector]

base: root://xrootd-cms.infn.it
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1

[wlcg_fs_eoscms_redirector]

base: root://eoscms.cern.ch
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1

[wlcg_fs_global_redirector]

base: root://cms-xrd-global.cern.ch
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


# [wlcg_fs_run3_2022_postEE_nano_tau_v12]
# base: root://eoscms.cern.ch/eos/cms/store/group/phys_tau/irandreo/Run3_22_postEE_new
# use_cache: $CF_WLCG_USE_CACHE
# cache_root: $CF_WLCG_CACHE_ROOT
# cache_cleanup: $CF_WLCG_CACHE_CLEANUP
# cache_max_size: 15GB
# cache_global_lock: True
# cache_mtime_patience: -1

# [wlcg_fs_run2_UL2018_nano_tau_v10]
# base: root://xrootd-cms.infn.it/eos/cms/store/group/phys_tau/TauFW/nanoV10/Run2_2018/
# use_cache: $CF_WLCG_USE_CACHE
# cache_root: $CF_WLCG_CACHE_ROOT
# cache_cleanup: $CF_WLCG_CACHE_CLEANUP
# cache_max_size: 15GB
# cache_global_lock: True
# cache_mtime_patience: -1